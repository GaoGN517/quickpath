library(quickpath)
#head(gene_exp.diff)
deg = grab_deg_from_cuffdiff(gene_exp.diff, class = "mmu")
#head(deg)
sig.genes = deg$external_gene_name
path_res = pathway_analysis(sig.genes, class = "mmu")
pathway <- c("Purine metabolism", "PI3K-Akt signaling pathway", "AMPK signaling pathway", "Choline metabolism in cancer")
deg.list = extract_degs_by_pathway(pathway, deg, class = "mmu")
library(quickpath)
#head(gene_exp.diff)
deg = grab_deg_from_cuffdiff(gene_exp.diff, class = "mmu")
#head(deg)
sig.genes = deg$external_gene_name
path_res = pathway_analysis(sig.genes, class = "mmu")
pathway <- c("Purine metabolism", "PI3K-Akt signaling pathway", "AMPK signaling pathway", "Choline metabolism in cancer")
deg.list = extract_degs_by_pathway(pathway, deg, class = "mmu")
library(quickpath)
#head(gene_exp.diff)
deg = grab_deg_from_cuffdiff(gene_exp.diff, class = "mmu")
#head(deg)
sig.genes = deg$external_gene_name
path_res = pathway_analysis(sig.genes, class = "mmu")
pathway <- c("Purine metabolism", "PI3K-Akt signaling pathway", "AMPK signaling pathway", "Choline metabolism in cancer")
deg.list = extract_degs_by_pathway(pathway, deg, class = "mmu")
library(quickpath)
#head(gene_exp.diff)
deg = grab_deg_from_cuffdiff(gene_exp.diff, class = "mmu")
#head(deg)
sig.genes = deg$external_gene_name
path_res = pathway_analysis(sig.genes, class = "mmu")
pathway <- c("Purine metabolism", "PI3K-Akt signaling pathway", "AMPK signaling pathway", "Choline metabolism in cancer")
deg.list = extract_degs_by_pathway(pathway, deg, class = "mmu")
library(quickpath)
#head(gene_exp.diff)
deg = grab_deg_from_cuffdiff(gene_exp.diff, class = "mmu")
#head(deg)
sig.genes = deg$external_gene_name
path_res = pathway_analysis(sig.genes, class = "mmu")
pathway <- c("Purine metabolism", "PI3K-Akt signaling pathway", "AMPK signaling pathway", "Choline metabolism in cancer")
deg.list = extract_degs_by_pathway(pathway, deg, class = "mmu")
library(quickpath)
#head(gene_exp.diff)
deg = grab_deg_from_cuffdiff(gene_exp.diff, class = "mmu")
#head(deg)
sig.genes = deg$external_gene_name
path_res = pathway_analysis(sig.genes, class = "mmu")
pathway <- c("Purine metabolism", "PI3K-Akt signaling pathway", "AMPK signaling pathway", "Choline metabolism in cancer")
deg.list = extract_degs_by_pathway(pathway, deg, class = "mmu")
deg_chow = grab_deg_from_cuffdiff(gene_exp.diff_chow, class = "mmu")
sig.genes = deg_chow$external_gene_name
path_res_chow = pathway_analysis(sig.genes, class = "mmu")
deg_e95 = grab_deg_from_cuffdiff(gene_exp.diff_e95, class = "mmu")
sig.genes = deg_e95$external_gene_name
path_res_e95 = pathway_analysis(sig.genes, class = "mmu")
deg_e105 = grab_deg_from_cuffdiff(gene_exp.diff_e105, class = "mmu")
sig.genes = deg_e105$external_gene_name
path_res_e105 = pathway_analysis(sig.genes, class = "mmu")
deg_chow = grab_deg_from_cuffdiff(gene_exp.diff_chow, class = "mmu")
sig.genes = deg_chow$external_gene_name
path_res_chow = pathway_analysis(sig.genes, class = "mmu")
deg_chow = grab_deg_from_cuffdiff(gene_exp.diff_chow, class = "mmu")
sig.genes = deg_chow$external_gene_name
path_res_chow = pathway_analysis(sig.genes, class = "mmu")
deg_e105 = grab_deg_from_cuffdiff(gene_exp.diff_e105, class = "mmu")
sig.genes = deg_e105$external_gene_name
path_res_e105 = pathway_analysis(sig.genes, class = "mmu")
deg_e95 = grab_deg_from_cuffdiff(gene_exp.diff_e95, class = "mmu")
sig.genes = deg_e95$external_gene_name
path_res_e95 = pathway_analysis(sig.genes, class = "mmu")
deg_egg = grab_deg_from_cuffdiff(gene_exp.diff_egg, class = "gga")
sig.genes = deg_egg$external_gene_name
path_res_egg = pathway_analysis(sig.genes, class = "gga")
deg_chow = grab_deg_from_cuffdiff(gene_exp.diff_chow, class = "mmu")
sig.genes = deg_chow$external_gene_name
path_res_chow = pathway_analysis(sig.genes, class = "mmu")
deg_e105 = grab_deg_from_cuffdiff(gene_exp.diff_e105, class = "mmu")
sig.genes = deg_e105$external_gene_name
path_res_e105 = pathway_analysis(sig.genes, class = "mmu")
deg_e95 = grab_deg_from_cuffdiff(gene_exp.diff_e95, class = "mmu")
sig.genes = deg_e95$external_gene_name
path_res_e95 = pathway_analysis(sig.genes, class = "mmu")
deg_egg = grab_deg_from_cuffdiff(gene_exp.diff_egg, class = "gga")
sig.genes = deg_egg$external_gene_name
path_res_egg = pathway_analysis(sig.genes, class = "gga")
deg_chow = grab_deg_from_cuffdiff(gene_exp.diff_chow, class = "mmu")
sig.genes = deg_chow$external_gene_name
path_res_chow = pathway_analysis(sig.genes, class = "mmu")
deg_e105 = grab_deg_from_cuffdiff(gene_exp.diff_e105, class = "mmu")
sig.genes = deg_e105$external_gene_name
path_res_e105 = pathway_analysis(sig.genes, class = "mmu")
deg_e95 = grab_deg_from_cuffdiff(gene_exp.diff_e95, class = "mmu")
sig.genes = deg_e95$external_gene_name
path_res_e95 = pathway_analysis(sig.genes, class = "mmu")
deg_egg = grab_deg_from_cuffdiff(gene_exp.diff_egg, class = "gga")
sig.genes = deg_egg$external_gene_name
path_res_egg = pathway_analysis(sig.genes, class = "gga")
deg_chow = grab_deg_from_cuffdiff(gene_exp.diff_chow, class = "mmu")
sig.genes = deg_chow$external_gene_name
path_res_chow = pathway_analysis(sig.genes, class = "mmu")
deg_chow = grab_deg_from_cuffdiff(gene_exp.diff_chow, class = "mmu")
sig.genes = deg_chow$external_gene_name
path_res_chow = pathway_analysis(sig.genes, class = "mmu")
deg_e105 = grab_deg_from_cuffdiff(gene_exp.diff_e105, class = "mmu")
sig.genes = deg_e105$external_gene_name
path_res_e105 = pathway_analysis(sig.genes, class = "mmu")
deg_e95 = grab_deg_from_cuffdiff(gene_exp.diff_e95, class = "mmu")
sig.genes = deg_e95$external_gene_name
path_res_e95 = pathway_analysis(sig.genes, class = "mmu")
deg_egg = grab_deg_from_cuffdiff(gene_exp.diff_egg, class = "gga")
sig.genes = deg_egg$external_gene_name
path_res_egg = pathway_analysis(sig.genes, class = "gga")
deg_chow = grab_deg_from_cuffdiff(gene_exp.diff_chow, class = "mmu")
sig.genes = deg_chow$external_gene_name
path_res_chow = pathway_analysis(sig.genes, class = "mmu")
deg_e105 = grab_deg_from_cuffdiff(gene_exp.diff_e105, class = "mmu")
sig.genes = deg_e105$external_gene_name
path_res_e105 = pathway_analysis(sig.genes, class = "mmu")
#'
#'@param sig.genes A vector of significantly changed genes
#'@param class Specify which type of gene
#'@param mc.cores Specify how many cores to use
#'@return A list of all significantly changed pathways, and all pathways with p value
#'@examples
#'deg = grab_deg_from_cuffdiff(gene_exp.diff)
#'sig.genes = deg$external_gene_name
#'path_res = pathway_analysis(sig.genes, class = "mmu")
#'@export
pathway_analysis <- function(sig.genes, class=c("mmu","hsa","gga"), mccores = 4){
############## prepare needed data #################
all = eval(parse(text = paste0(class,"_genes_pathways")))
paths = eval(parse(text = paste0(class,"_pathway")))
path.gene = eval(parse(text = paste0(class,"_path_gene_list")))
############# clean background gene list ############
all.genes <- all$gene.symbol
all.genes <- all.genes[!is.na(all.genes)]
all.genes <- unique(all$gene.symbol)
############ clean DEGs list #################
sig.genes <- sig.genes[!is.na(sig.genes)]
sig.genes <- unique(sig.genes)
sig.genes <- unique(intersect(sig.genes,all.genes))
###########################################
print(paste0("sig genes in pathway: ",length(sig.genes),"/",length(all.genes)))
################### do hypergeometric test ###########
out <- parallel::mclapply(path.gene,each_test,all.genes,sig.genes,mc.cores = mccores)
print("Inference part is Done.")
############## format results ##################
tmpname <- names(out)
out <- t(as.data.frame(out))
colnames(out) <- c("pval","percentage")
out <- as.data.frame(out)
rownames(out) <- tmpname
qval <- p.adjust(out$pval,"fdr")
df <- data.frame(name = rownames(out),pval=as.numeric(out$pval),qval=as.numeric(qval),percentage=as.numeric(out$percentage))
out <- merge(paths,df,by="name")
out <- na.omit(out)
return(list(out[out$pval<=0.05,],
out))
}
each_test <- function(x, all_genes, sig_genes){
if(!is.na(x)){
symbol <- na.omit(x[,1])
symbol = symbol[!is.na(symbol)]
pval.percent = pvalhyper(all.genes,sig.genes,symbol)
return(pval.percent)
}
else{
return(c(NA,NA))
}
}
############## get pvalue from hypergeometric distribution ############
pvalhyper <- function(all.genes, sig.genes, gs){
N = length(all.genes)
R = length(sig.genes)
n = length(gs)
r = length(intersect(gs, sig.genes))
if(r==0){
return(c(1,r/n))
}
else{
pval <- 1 - sum(dhyper(0:r-1,R,N-R,n))
return(c(pval,r/n))
}
}
deg_chow = grab_deg_from_cuffdiff(gene_exp.diff_chow, class = "mmu")
sig.genes = deg_chow$external_gene_name
path_res_chow = pathway_analysis(sig.genes, class = "mmu")
?apply
#'
#'@param sig.genes A vector of significantly changed genes
#'@param class Specify which type of gene
#'@param mc.cores Specify how many cores to use
#'@return A list of all significantly changed pathways, and all pathways with p value
#'@examples
#'deg = grab_deg_from_cuffdiff(gene_exp.diff)
#'sig.genes = deg$external_gene_name
#'path_res = pathway_analysis(sig.genes, class = "mmu")
#'@export
pathway_analysis <- function(sig.genes, class=c("mmu","hsa","gga"), mccores = 4){
############## prepare needed data #################
all = eval(parse(text = paste0(class,"_genes_pathways")))
paths = eval(parse(text = paste0(class,"_pathway")))
path.gene = eval(parse(text = paste0(class,"_path_gene_list")))
############# clean background gene list ############
all.genes <- all$gene.symbol
all.genes <- all.genes[!is.na(all.genes)]
all.genes <- unique(all$gene.symbol)
############ clean DEGs list #################
sig.genes <- sig.genes[!is.na(sig.genes)]
sig.genes <- unique(sig.genes)
sig.genes <- unique(intersect(sig.genes,all.genes))
###########################################
print(paste0("sig genes in pathway: ",length(sig.genes),"/",length(all.genes)))
################### do hypergeometric test ###########
out <- parallel::mclapply(path.gene,each_test,all.genes = all.genes,sig.genes = sig.genes,mc.cores = mccores)
print("Inference part is Done.")
############## format results ##################
tmpname <- names(out)
out <- t(as.data.frame(out))
colnames(out) <- c("pval","percentage")
out <- as.data.frame(out)
rownames(out) <- tmpname
qval <- p.adjust(out$pval,"fdr")
df <- data.frame(name = rownames(out),pval=as.numeric(out$pval),qval=as.numeric(qval),percentage=as.numeric(out$percentage))
out <- merge(paths,df,by="name")
out <- na.omit(out)
return(list(out[out$pval<=0.05,],
out))
}
each_test <- function(x, all_genes, sig_genes){
if(!is.na(x)){
symbol <- na.omit(x[,1])
symbol = symbol[!is.na(symbol)]
pval.percent = pvalhyper(all.genes,sig.genes,symbol)
return(pval.percent)
}
else{
return(c(NA,NA))
}
}
############## get pvalue from hypergeometric distribution ############
pvalhyper <- function(all.genes, sig.genes, gs){
N = length(all.genes)
R = length(sig.genes)
n = length(gs)
r = length(intersect(gs, sig.genes))
if(r==0){
return(c(1,r/n))
}
else{
pval <- 1 - sum(dhyper(0:r-1,R,N-R,n))
return(c(pval,r/n))
}
}
deg_chow = grab_deg_from_cuffdiff(gene_exp.diff_chow, class = "mmu")
sig.genes = deg_chow$external_gene_name
path_res_chow = pathway_analysis(sig.genes, class = "mmu")
sig.genes
class = "mmu"
############## prepare needed data #################
all = eval(parse(text = paste0(class,"_genes_pathways")))
paths = eval(parse(text = paste0(class,"_pathway")))
path.gene = eval(parse(text = paste0(class,"_path_gene_list")))
############# clean background gene list ############
all.genes <- all$gene.symbol
all.genes <- all.genes[!is.na(all.genes)]
all.genes <- unique(all$gene.symbol)
############ clean DEGs list #################
sig.genes <- sig.genes[!is.na(sig.genes)]
sig.genes <- unique(sig.genes)
sig.genes <- unique(intersect(sig.genes,all.genes))
print(paste0("sig genes in pathway: ",length(sig.genes),"/",length(all.genes)))
################### do hypergeometric test ###########
out <- parallel::mclapply(path.gene,each_test,all.genes = all.genes,sig.genes = sig.genes,mc.cores = mccores)
mc.cores= 8
################### do hypergeometric test ###########
out <- parallel::mclapply(path.gene,each_test,all.genes = all.genes,sig.genes = sig.genes,mc.cores = mc.cores)
lapply(path.gene,each_test,all.genes = all.genes,sig.genes = sig.genes)
each_test <- function(x, all_genes, sig_genes){
if(!is.na(x)){
symbol <- na.omit(x[,1])
symbol = symbol[!is.na(symbol)]
pval.percent = pvalhyper(all.genes,sig.genes,symbol)
return(pval.percent)
}
else{
return(c(NA,NA))
}
}
each_test <- function(x, all.genes, sig.genes){
if(!is.na(x)){
symbol <- na.omit(x[,1])
symbol = symbol[!is.na(symbol)]
pval.percent = pvalhyper(all.genes,sig.genes,symbol)
return(pval.percent)
}
else{
return(c(NA,NA))
}
}
lapply(path.gene,each_test,all.genes = all.genes,sig.genes = sig.genes)
warning()
warnings()
################### do hypergeometric test ###########
out <- parallel::mclapply(path.gene,each_test,all.genes = all.genes,sig.genes = sig.genes,mc.cores = mc.cores)
out
library(quickpath)
library(quickpath)
#head(gene_exp.diff)
deg = grab_deg_from_cuffdiff(gene_exp.diff, class = "mmu")
#head(deg)
sig.genes = deg$external_gene_name
path_res = pathway_analysis(sig.genes, class = "mmu")
pathway <- c("Purine metabolism", "PI3K-Akt signaling pathway", "AMPK signaling pathway", "Choline metabolism in cancer")
deg.list = extract_degs_by_pathway(pathway, deg, class = "mmu")
deg_chow = grab_deg_from_cuffdiff(gene_exp.diff_chow, class = "mmu")
sig.genes = deg_chow$external_gene_name
path_res_chow = pathway_analysis(sig.genes, class = "mmu")
deg_e105 = grab_deg_from_cuffdiff(gene_exp.diff_e105, class = "mmu")
sig.genes = deg_e105$external_gene_name
path_res_e105 = pathway_analysis(sig.genes, class = "mmu")
deg_e95 = grab_deg_from_cuffdiff(gene_exp.diff_e95, class = "mmu")
sig.genes = deg_e95$external_gene_name
path_res_e95 = pathway_analysis(sig.genes, class = "mmu")
deg_egg = grab_deg_from_cuffdiff(gene_exp.diff_egg, class = "gga")
sig.genes = deg_egg$external_gene_name
path_res_egg = pathway_analysis(sig.genes, class = "gga")
deg_chow = grab_deg_from_cuffdiff(gene_exp.diff_chow, class = "mmu")
sig.genes = deg_chow$external_gene_name
path_res_chow = pathway_analysis(sig.genes, class = "mmu")
deg_e105 = grab_deg_from_cuffdiff(gene_exp.diff_e105, class = "mmu")
sig.genes = deg_e105$external_gene_name
path_res_e105 = pathway_analysis(sig.genes, class = "mmu")
deg_e95 = grab_deg_from_cuffdiff(gene_exp.diff_e95, class = "mmu")
sig.genes = deg_e95$external_gene_name
path_res_e95 = pathway_analysis(sig.genes, class = "mmu")
deg_egg = grab_deg_from_cuffdiff(gene_exp.diff_egg, class = "gga")
sig.genes = deg_egg$external_gene_name
path_res_egg = pathway_analysis(sig.genes, class = "gga")
list.info = list(path_res[[2]], path_res_chow[[2]], path_res_e95[[2]], path_res_e105[[2]])
path.ids = check_pathway_name(pathway, class = "mmu")
group.info = c("MCD","Chow","E9.5","E10.5")
path.names = c("1st path","2nd path","3rd path","4th path")
fig_path(path.ids, list.info, group.info, criterion = "percentage", path.names = path.names)
fig_path(path.ids, list.info, group.info, criterion = "pval", path.names = path.names)
library(quickpath)
devtools::build_vignettes()
?grab_deg_from_cuffdiff
#head(gene_exp.diff)
deg = grab_deg_from_cuffdiff(gene_exp.diff, class = "mmu")
#head(deg)
deg
dim(gene_exp.diff)
dim(deg)
#head(gene_exp.diff)
deg = grab_deg_from_cuffdiff(gene_exp.diff)
#head(deg)
dim(deg)
#head(gene_exp.diff)
deg = grab_deg_from_cuffdiff(gene_exp.diff, class = "mmu", criterion = "p_value", cutoff = 0.05)
#head(deg)
head(gene_exp.diff)
deg = grab_deg_from_cuffdiff(gene_exp.diff, class = "mmu", criterion = "p_value", cutoff = 0.05)
head(deg)
library(quickpath)
data(gene_exp.diff)
print(dim(gene_exp.diff))
#head(gene_exp.diff)
deg = grab_deg_from_cuffdiff(gene_exp.diff, class = "mmu", criterion = "p_value", cutoff = 0.05)
print(dim(deg))
all = eval(parse(text = paste0(class,"_genes_pathways")))
class = "mmu"
all = eval(parse(text = paste0(class,"_genes_pathways")))
all.genes <- all$gene.symbol
all.genes
pathway_analysis_meth(sig.genes,all.genes, class = "mmu")
library(quickpath)
library(quickpath)
library(quickpath)
library(quickpath)
library(quickpath)
deg
head(deg[,c(1,4,8,9,10,11,12,13,15,16)])
data(gene_exp.diff)
print(dim(gene_exp.diff))
head(gene.diff, n = 5)
?fisher.test
fisher.test()
fisher.test
list.info = list(path_res[[2]], path_res_chow[[2]], path_res_e95[[2]], path_res_e105[[2]])
path.ids = check_pathway_name(pathway, class = "mmu")
group.info = c("MCD","Chow","E9.5","E10.5")
path.names = c("1st path","2nd path","3rd path","4th path")
fig_path(path.ids, list.info, group.info, criterion = "percentage", path.names = path.names)
fig_path(path.ids, list.info, group.info, criterion = "pval", path.names = path.names)
total.genes = mmu_genes_pathways$gene.symbol
total.genes = mmu_genes_pathways$gene.symbol
deg = grab_deg_from_cuffdiff(gene_exp.diff, class = "mmu", criterion = "p_value", cutoff = 0.05)
sig.genes = deg$external_gene_name
meth_path_res = pathway_analysis(sig.genes,total.genes, class = "mmu")
total.genes = mmu_genes_pathways$gene.symbol
deg = grab_deg_from_cuffdiff(gene_exp.diff, class = "mmu", criterion = "p_value", cutoff = 0.05)
sig.genes = deg$external_gene_name
meth_path_res = pathway_analysis_meth(sig.genes,total.genes, class = "mmu")
dhyper(-1,1,2,2)
dhyper(0:-1,1,2,2)
devtools::build_vignettes()
library(quickpath)
library(quickpath)
library(quickpath)
devtools::install_github("jiangyuan2li/quickpath")
library(quickpath)
library(quickpath)
devtools::build_vignettes()
library(quickpath)
2/19
library(quickpath)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(quickpath)
data(gene_exp.diff)
print(dim(gene_exp.diff))
head(gene_exp.diff, n = 5)
deg = grab_degs_from_cuffdiff(gene_exp.diff, class = "mmu", criterion = "p_value", cut.off = 0.05)
print(dim(deg))
head(deg[,c(1,4,8,9,10,11,12,13,15,16)],n = 5)
sig.genes = deg$external_gene_name
path_res = pathway_analysis(sig.genes, class = "mmu")
head(path_res[[1]])
deg_egg = grab_degs_from_cuffdiff(gene_exp.diff_egg, class = "gga")
sig.genes = deg_egg$external_gene_name
path_res_egg = pathway_analysis(sig.genes, class = "gga")
pathway <- c("Purine metabolism", "PI3K-Akt signaling pathway",
"AMPK signaling pathway", "Choline metabolism in cancer")
deg.list = extract_genes_by_pathway(pathway, deg, class = "mmu")
deg_chow = grab_degs_from_cuffdiff(gene_exp.diff_chow, class = "mmu")
sig.genes = deg_chow$external_gene_name
path_res_chow = pathway_analysis(sig.genes, class = "mmu")
deg_e105 = grab_degs_from_cuffdiff(gene_exp.diff_e105, class = "mmu")
sig.genes = deg_e105$external_gene_name
path_res_e105 = pathway_analysis(sig.genes, class = "mmu")
deg_e95 = grab_degs_from_cuffdiff(gene_exp.diff_e95, class = "mmu")
sig.genes = deg_e95$external_gene_name
path_res_e95 = pathway_analysis(sig.genes, class = "mmu")
deg_chow = grab_degs_from_cuffdiff(gene_exp.diff_chow, class = "mmu")
sig.genes = deg_chow$external_gene_name
path_res_chow = pathway_analysis(sig.genes, class = "mmu")
deg_e105 = grab_degs_from_cuffdiff(gene_exp.diff_e105, class = "mmu")
sig.genes = deg_e105$external_gene_name
path_res_e105 = pathway_analysis(sig.genes, class = "mmu")
deg_chow = grab_degs_from_cuffdiff(gene_exp.diff_chow, class = "mmu")
sig.genes = deg_chow$external_gene_name
path_res_chow = pathway_analysis(sig.genes, class = "mmu")
deg_e95 = grab_degs_from_cuffdiff(gene_exp.diff_e95, class = "mmu")
sig.genes = deg_e95$external_gene_name
path_res_e95 = pathway_analysis(sig.genes, class = "mmu")
deg_chow = grab_degs_from_cuffdiff(gene_exp.diff_chow, class = "mmu")
sig.genes = deg_chow$external_gene_name
path_res_chow = pathway_analysis(sig.genes, class = "mmu")
total.genes = mmu_genes_pathways$gene.symbol
deg = grab_degs_from_cuffdiff(gene_exp.diff, class = "mmu", criterion = "p_value", cut.off = 0.05)
sig.genes = deg$external_gene_name
meth_path_res = pathway_analysis_meth(sig.genes,total.genes, class = "mmu")
library(quickpath)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(quickpath)
data(gene_exp.diff)
print(dim(gene_exp.diff))
head(gene_exp.diff, n = 5)
deg = grab_degs_from_cuffdiff(gene_exp.diff, class = "mmu", criterion = "p_value", cut.off = 0.05)
print(dim(deg))
head(deg[,c(1,4,8,9,10,11,12,13,15,16)],n = 5)
sig.genes = deg$external_gene_name
path_res = pathway_analysis(sig.genes, class = "mmu")
head(path_res[[1]])
deg_egg = grab_degs_from_cuffdiff(gene_exp.diff_egg, class = "gga")
sig.genes = deg_egg$external_gene_name
path_res_egg = pathway_analysis(sig.genes, class = "gga")
pathway <- c("Purine metabolism", "PI3K-Akt signaling pathway",
"AMPK signaling pathway", "Choline metabolism in cancer")
deg.list = extract_genes_by_pathway(pathway, deg, class = "mmu")
deg_chow = grab_degs_from_cuffdiff(gene_exp.diff_chow, class = "mmu")
sig.genes = deg_chow$external_gene_name
path_res_chow = pathway_analysis(sig.genes, class = "mmu")
deg_e105 = grab_degs_from_cuffdiff(gene_exp.diff_e105, class = "mmu")
sig.genes = deg_e105$external_gene_name
path_res_e105 = pathway_analysis(sig.genes, class = "mmu")
deg_e105 = grab_degs_from_cuffdiff(gene_exp.diff_e105, class = "mmu")
sig.genes = deg_e105$external_gene_name
path_res_e105 = pathway_analysis(sig.genes, class = "mmu")
list.info = list(path_res[[2]], path_res_chow[[2]], path_res_e95[[2]], path_res_e105[[2]])
path.ids = check_pathway_name(pathway, class = "mmu")
group.info = c("MCD","Chow","E9.5","E10.5")
path.names = c("1st path","2nd path","3rd path","4th path")
fig_path(path.ids, list.info, group.info, criterion = "percentage", path.names = path.names)
fig_path(path.ids, list.info, group.info, criterion = "pval", path.names = path.names)
total.genes = mmu_genes_pathways$gene.symbol
deg = grab_degs_from_cuffdiff(gene_exp.diff, class = "mmu", criterion = "p_value", cut.off = 0.05)
sig.genes = deg$external_gene_name
meth_path_res = pathway_analysis_meth(sig.genes,total.genes, class = "mmu")
total.genes = mmu_genes_pathways$gene.symbol
deg = grab_degs_from_cuffdiff(gene_exp.diff, class = "mmu", criterion = "p_value", cut.off = 0.05)
sig.genes = deg$external_gene_name
meth_path_res = pathway_analysis_meth(sig.genes,total.genes, class = "mmu")
total.genes = mmu_genes_pathways$gene.symbol
deg = grab_degs_from_cuffdiff(gene_exp.diff, class = "mmu", criterion = "p_value", cut.off = 0.05)
sig.genes = deg$external_gene_name
meth_path_res = pathway_analysis_meth(sig.genes,total.genes, class = "mmu")
